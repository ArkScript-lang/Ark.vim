fun
let
mut
set
if
while
begin
import
del
list
append
append!
concat
concat!
pop
pop!
@=
@@=
sys:args
sys:platform
and
or
$undef
$symcat
$argcount
$repr
$as-is
+
-
*
/
>
<
<=
>=
!=
=
len
empty?
tail
head
nil?
assert
toNumber
toString
@
@@
mod
type
hasField
not
string:toLower
string:toUpper
string:reverse
string:slice
string:split
string:replace
string:join
switch
math:abs
math:even
math:odd
math:min
math:max
math:pow
math:sqrt
math:fibo
math:divs
math:log
math:log2
math:log10
math:floordiv
math:complex
math:complex-add
math:complex-sub
math:complex-mul
math:complex-conjugate
math:complex-module
math:complex-div
lazy:eval
exceptions:throw
exceptions:return
exceptions:try
range:range
range:forEach
range:filter
range:map
range:reduce
os:home_dir
test:case
test:expect
test:eq
test:neq
test:suite
list:forEach
list:product
list:sum
list:drop
list:dropWhile
list:filter
list:map
list:reduce
list:flatten
list:flatMap
list:take
list:takeWhile
list:unzip
list:zip
list:zipWithIndex
list:foldLeft
list:forAll
list:any
list:countIf
list:iterate
list:iota
list:chunkBy
functional:compose
functional:left
functional:right
functional:flip
events:manager:make
events:_check_valid
events:on
events:emitWith
events:emit
events:removeListenersOfType
string:format
string:find
string:removeAt
string:ord
string:chr
string:setAt
async
await
math:exp
math:ln
math:ceil
math:floor
math:round
math:NaN?
math:Inf?
math:cos
math:sin
math:tan
math:arccos
math:arcsin
math:arctan
math:cosh
math:sinh
math:tanh
math:acosh
math:asinh
math:atanh
random
print
puts
input
io:writeFile
io:appendToFile
io:readFile
io:fileExists?
io:listFiles
io:dir?
io:makeDir
io:removeFiles
list:reverse
list:find
list:slice
list:sort
list:fill
list:setAt
sys:exec
sys:sleep
sys:exit
time
